[
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2023-03-22T20:34:09.504Z",
        "before": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "match": {
              "location": "utils.Hooks.setUp()"
            }
          }
        ],
        "line": 24,
        "name": "Validate the POST request",
        "description": "",
        "id": "as-a-qa--i-validate-gorest-crud-operations;validate-the-post-request;gorest-data;2",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "utils.Hooks.teardown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3246000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Create a GoRest user with \"Batch Five\", \"female\", email, \"active\" and \"/public/v2/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Batch Five\"",
                  "offset": 26
                },
                {
                  "val": "\"female\"",
                  "offset": 40
                },
                {
                  "val": "\"active\"",
                  "offset": 57
                },
                {
                  "val": "\"/public/v2/users\"",
                  "offset": 70
                }
              ],
              "location": "stepDef.gorest_step_def.GoRestStepDef.createAGoRstUserWithEmailAnd(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Status code 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 12
                }
              ],
              "location": "stepDef.gorest_step_def.GoRestStepDef.statusCode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1428000000,
              "status": "passed"
            },
            "line": 7,
            "name": "I perform a GET request with \"/public/v2/users\" with id",
            "match": {
              "arguments": [
                {
                  "val": "\"/public/v2/users\"",
                  "offset": 29
                }
              ],
              "location": "stepDef.gorest_step_def.GoRestStepDef.iPerformAGETRequestWithWithId(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Status code 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 12
                }
              ],
              "location": "stepDef.gorest_step_def.GoRestStepDef.statusCode(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 627000000,
              "status": "passed"
            },
            "line": 9,
            "name": "I perform PUT request with following data with \"/public/v2/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/public/v2/users\"",
                  "offset": 47
                }
              ],
              "location": "stepDef.gorest_step_def.GoRestStepDef.iPerformPUTRequestWithFollowingData(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Global"
                ]
              },
              {
                "cells": [
                  "gender",
                  "male"
                ]
              },
              {
                "cells": [
                  "status",
                  "inactive"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 13,
            "name": "Status code 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 12
                }
              ],
              "location": "stepDef.gorest_step_def.GoRestStepDef.statusCode(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 557000000,
              "status": "passed"
            },
            "line": 14,
            "name": "I perform PATCH request with following data with \"/public/v2/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/public/v2/users\"",
                  "offset": 49
                }
              ],
              "location": "stepDef.gorest_step_def.GoRestStepDef.iPerformPATCHRequestWithFollowingData(java.lang.String,java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Vera"
                ]
              },
              {
                "cells": [
                  "gender",
                  "female"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "line": 17,
            "name": "Status code 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 12
                }
              ],
              "location": "stepDef.gorest_step_def.GoRestStepDef.statusCode(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 537000000,
              "status": "passed"
            },
            "line": 18,
            "name": "I perform DELETE request with following data with \"/public/v2/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/public/v2/users\"",
                  "offset": 50
                }
              ],
              "location": "stepDef.gorest_step_def.GoRestStepDef.iPerformDELETERequestWithFollowingDataWith(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: Validating status Code\nExpected: is \u003c200\u003e\n     but: was \u003c204\u003e\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)\n\tat stepDef.gorest_step_def.GoRestStepDef.statusCode(GoRestStepDef.java:59)\n\tat âœ½.Status code 200(file:///Users/anastasiyaprudnikova/IdeaProjects/backend_automation_5/src/test/resources/api/Validate_GoRest_CRUD_Operations.feature:19)\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 19,
            "name": "Status code 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 12
                }
              ],
              "location": "stepDef.gorest_step_def.GoRestStepDef.statusCode(int)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@api"
          }
        ]
      }
    ],
    "name": "As a QA, I validate GoRest CRUD operations",
    "description": "",
    "id": "as-a-qa--i-validate-gorest-crud-operations",
    "keyword": "Feature",
    "uri": "file:src/test/resources/api/Validate_GoRest_CRUD_Operations.feature",
    "tags": [
      {
        "name": "@api",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  }
]